{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1RPCYge0vdvAlDXS_kleqm9pfQ0bLu8GA","timestamp":1663120157534}],"machine_shape":"hm","authorship_tag":"ABX9TyOLr4cw19MVBI281klCannA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"rxNpxLVGjsLL"},"outputs":[],"source":["import tensorflow as tf\n","import pandas as pd\n","import numpy as np\n","from sklearn.model_selection import train_test_split\n","import matplotlib.pyplot as plt\n","%matplotlib inline"]},{"cell_type":"code","source":["# 데이터 불러오기\n","df = pd.read_csv('/content/흑색종크기_train.csv')\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"7bJgQs9BlZ1p","executionInfo":{"status":"ok","timestamp":1662095279927,"user_tz":-540,"elapsed":551,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"85aece25-ba3a-465d-b72e-3ed74d3f019f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mass_npea  size_npear  malign_ratio  damage_size  exposed_area  \\\n","0    6930.90     2919.02       0.42116      51.8298  9.888294e+05   \n","1   15635.70     4879.36       0.31206     223.5500  2.058426e+06   \n","2   10376.20     2613.88       0.25191     127.3370  1.434676e+06   \n","3   13093.80     4510.06       0.34444     155.4400  1.812195e+06   \n","4    7545.21     2882.36       0.38201      85.1237  1.043918e+06   \n","\n","   std_dev_malign  err_malign  malign_penalty  damage_ratio  tumor_size  \n","0         109.487     2758.76              72       39.3620      14.103  \n","1         248.881     5952.53             240       22.0253       2.648  \n","2         160.093     4635.26              73       29.9963       1.688  \n","3         173.015     5273.87              32       28.1354       3.796  \n","4         124.414     3263.35              57       35.0200      18.023  "],"text/html":["\n","  <div id=\"df-7a2c88a9-62e3-4d6e-8d4e-0f79def2a54e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mass_npea</th>\n","      <th>size_npear</th>\n","      <th>malign_ratio</th>\n","      <th>damage_size</th>\n","      <th>exposed_area</th>\n","      <th>std_dev_malign</th>\n","      <th>err_malign</th>\n","      <th>malign_penalty</th>\n","      <th>damage_ratio</th>\n","      <th>tumor_size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6930.90</td>\n","      <td>2919.02</td>\n","      <td>0.42116</td>\n","      <td>51.8298</td>\n","      <td>9.888294e+05</td>\n","      <td>109.487</td>\n","      <td>2758.76</td>\n","      <td>72</td>\n","      <td>39.3620</td>\n","      <td>14.103</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15635.70</td>\n","      <td>4879.36</td>\n","      <td>0.31206</td>\n","      <td>223.5500</td>\n","      <td>2.058426e+06</td>\n","      <td>248.881</td>\n","      <td>5952.53</td>\n","      <td>240</td>\n","      <td>22.0253</td>\n","      <td>2.648</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10376.20</td>\n","      <td>2613.88</td>\n","      <td>0.25191</td>\n","      <td>127.3370</td>\n","      <td>1.434676e+06</td>\n","      <td>160.093</td>\n","      <td>4635.26</td>\n","      <td>73</td>\n","      <td>29.9963</td>\n","      <td>1.688</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13093.80</td>\n","      <td>4510.06</td>\n","      <td>0.34444</td>\n","      <td>155.4400</td>\n","      <td>1.812195e+06</td>\n","      <td>173.015</td>\n","      <td>5273.87</td>\n","      <td>32</td>\n","      <td>28.1354</td>\n","      <td>3.796</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7545.21</td>\n","      <td>2882.36</td>\n","      <td>0.38201</td>\n","      <td>85.1237</td>\n","      <td>1.043918e+06</td>\n","      <td>124.414</td>\n","      <td>3263.35</td>\n","      <td>57</td>\n","      <td>35.0200</td>\n","      <td>18.023</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a2c88a9-62e3-4d6e-8d4e-0f79def2a54e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7a2c88a9-62e3-4d6e-8d4e-0f79def2a54e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7a2c88a9-62e3-4d6e-8d4e-0f79def2a54e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["#null 값 확인\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uabRAD6omR1l","executionInfo":{"status":"ok","timestamp":1662095563375,"user_tz":-540,"elapsed":325,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"a46b88d8-9e21-40a1-9c73-849937e62f54"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["mass_npea         0\n","size_npear        0\n","malign_ratio      0\n","damage_size       0\n","exposed_area      0\n","std_dev_malign    0\n","err_malign        0\n","malign_penalty    0\n","damage_ratio      0\n","tumor_size        0\n","dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# 타겟\n","target = 'tumor_size'"],"metadata":{"id":"u8Ub4TxSnXlR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_X= df.drop(columns=['tumor_size'])\n","df_X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"58ILonuHnqCV","executionInfo":{"status":"ok","timestamp":1662097388578,"user_tz":-540,"elapsed":419,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"2ceb765c-1739-4f9f-fcc3-fc80707b3a5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      mass_npea  size_npear  malign_ratio  damage_size  exposed_area  \\\n","0       6930.90     2919.02       0.42116      51.8298  9.888294e+05   \n","1      15635.70     4879.36       0.31206     223.5500  2.058426e+06   \n","2      10376.20     2613.88       0.25191     127.3370  1.434676e+06   \n","3      13093.80     4510.06       0.34444     155.4400  1.812195e+06   \n","4       7545.21     2882.36       0.38201      85.1237  1.043918e+06   \n","...         ...         ...           ...          ...           ...   \n","9141    7250.25     3120.63       0.43041      82.0410  9.794768e+05   \n","9142   10145.00     3544.90       0.34942      90.1403  1.374393e+06   \n","9143    8086.10     1621.65       0.20054      78.5118  1.134257e+06   \n","9144   14418.90     6373.71       0.44203      84.0665  1.955398e+06   \n","9145    6852.61     1584.64       0.23124      51.3211  9.559976e+05   \n","\n","      std_dev_malign  err_malign  malign_penalty  damage_ratio  \n","0           109.4870     2758.76              72       39.3620  \n","1           248.8810     5952.53             240       22.0253  \n","2           160.0930     4635.26              73       29.9963  \n","3           173.0150     5273.87              32       28.1354  \n","4           124.4140     3263.35              57       35.0200  \n","...              ...         ...             ...           ...  \n","9141        118.7710     3370.24              53       37.0260  \n","9142        154.0270     5025.50              30       31.0565  \n","9143        104.2840     3804.98              13       34.2739  \n","9144        246.4450    19881.74              39       34.5885  \n","9145         80.6543     3073.51              28       37.8939  \n","\n","[9146 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-6e8cbf82-5adc-4f68-b728-4d89657abddd\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mass_npea</th>\n","      <th>size_npear</th>\n","      <th>malign_ratio</th>\n","      <th>damage_size</th>\n","      <th>exposed_area</th>\n","      <th>std_dev_malign</th>\n","      <th>err_malign</th>\n","      <th>malign_penalty</th>\n","      <th>damage_ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>6930.90</td>\n","      <td>2919.02</td>\n","      <td>0.42116</td>\n","      <td>51.8298</td>\n","      <td>9.888294e+05</td>\n","      <td>109.4870</td>\n","      <td>2758.76</td>\n","      <td>72</td>\n","      <td>39.3620</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>15635.70</td>\n","      <td>4879.36</td>\n","      <td>0.31206</td>\n","      <td>223.5500</td>\n","      <td>2.058426e+06</td>\n","      <td>248.8810</td>\n","      <td>5952.53</td>\n","      <td>240</td>\n","      <td>22.0253</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10376.20</td>\n","      <td>2613.88</td>\n","      <td>0.25191</td>\n","      <td>127.3370</td>\n","      <td>1.434676e+06</td>\n","      <td>160.0930</td>\n","      <td>4635.26</td>\n","      <td>73</td>\n","      <td>29.9963</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>13093.80</td>\n","      <td>4510.06</td>\n","      <td>0.34444</td>\n","      <td>155.4400</td>\n","      <td>1.812195e+06</td>\n","      <td>173.0150</td>\n","      <td>5273.87</td>\n","      <td>32</td>\n","      <td>28.1354</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7545.21</td>\n","      <td>2882.36</td>\n","      <td>0.38201</td>\n","      <td>85.1237</td>\n","      <td>1.043918e+06</td>\n","      <td>124.4140</td>\n","      <td>3263.35</td>\n","      <td>57</td>\n","      <td>35.0200</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>9141</th>\n","      <td>7250.25</td>\n","      <td>3120.63</td>\n","      <td>0.43041</td>\n","      <td>82.0410</td>\n","      <td>9.794768e+05</td>\n","      <td>118.7710</td>\n","      <td>3370.24</td>\n","      <td>53</td>\n","      <td>37.0260</td>\n","    </tr>\n","    <tr>\n","      <th>9142</th>\n","      <td>10145.00</td>\n","      <td>3544.90</td>\n","      <td>0.34942</td>\n","      <td>90.1403</td>\n","      <td>1.374393e+06</td>\n","      <td>154.0270</td>\n","      <td>5025.50</td>\n","      <td>30</td>\n","      <td>31.0565</td>\n","    </tr>\n","    <tr>\n","      <th>9143</th>\n","      <td>8086.10</td>\n","      <td>1621.65</td>\n","      <td>0.20054</td>\n","      <td>78.5118</td>\n","      <td>1.134257e+06</td>\n","      <td>104.2840</td>\n","      <td>3804.98</td>\n","      <td>13</td>\n","      <td>34.2739</td>\n","    </tr>\n","    <tr>\n","      <th>9144</th>\n","      <td>14418.90</td>\n","      <td>6373.71</td>\n","      <td>0.44203</td>\n","      <td>84.0665</td>\n","      <td>1.955398e+06</td>\n","      <td>246.4450</td>\n","      <td>19881.74</td>\n","      <td>39</td>\n","      <td>34.5885</td>\n","    </tr>\n","    <tr>\n","      <th>9145</th>\n","      <td>6852.61</td>\n","      <td>1584.64</td>\n","      <td>0.23124</td>\n","      <td>51.3211</td>\n","      <td>9.559976e+05</td>\n","      <td>80.6543</td>\n","      <td>3073.51</td>\n","      <td>28</td>\n","      <td>37.8939</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>9146 rows × 9 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e8cbf82-5adc-4f68-b728-4d89657abddd')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e8cbf82-5adc-4f68-b728-4d89657abddd button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e8cbf82-5adc-4f68-b728-4d89657abddd');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df_y=df[target]\n","df_y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lG25MIOFnz7X","executionInfo":{"status":"ok","timestamp":1662097391417,"user_tz":-540,"elapsed":302,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"22172d24-509b-4383-f253-8db260a119a8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       14.103\n","1        2.648\n","2        1.688\n","3        3.796\n","4       18.023\n","         ...  \n","9141    13.127\n","9142    17.091\n","9143     1.971\n","9144    17.749\n","9145    14.103\n","Name: tumor_size, Length: 9146, dtype: float64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# train set 나누기\n","\n","df_X_train, df_X_valid, df_y_train, df_y_valid = train_test_split(df_X,df_y,test_size=0.25,shuffle=True)"],"metadata":{"id":"pFz0DG7en2u0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pip install category_encoders\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KMzSNHjtv4F1","executionInfo":{"status":"ok","timestamp":1662097800840,"user_tz":-540,"elapsed":3726,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"f0a1653b-f337-4d38-ff7b-a99f39262565"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting category_encoders\n","  Downloading category_encoders-2.5.0-py2.py3-none-any.whl (69 kB)\n","\u001b[K     |████████████████████████████████| 69 kB 4.4 MB/s \n","\u001b[?25hRequirement already satisfied: patsy>=0.5.1 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.5.2)\n","Requirement already satisfied: numpy>=1.14.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.21.6)\n","Requirement already satisfied: statsmodels>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (0.12.2)\n","Requirement already satisfied: pandas>=1.0.5 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.3.5)\n","Requirement already satisfied: scipy>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.7.3)\n","Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.7/dist-packages (from category_encoders) (1.0.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.5->category_encoders) (2022.2.1)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.0.5->category_encoders) (2.8.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from patsy>=0.5.1->category_encoders) (1.15.0)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->category_encoders) (1.1.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20.0->category_encoders) (3.1.0)\n","Installing collected packages: category-encoders\n","Successfully installed category-encoders-2.5.0\n"]}]},{"cell_type":"code","source":["# 머신러닝으로 구현\n","\n","# 뭐..뭐하지 \n","\n","#일단 만만한 lightgbm\n","import lightgbm as lgb\n","from sklearn.model_selection import cross_val_score, KFold\n","from sklearn.preprocessing import StandardScaler\n","\n","model_lgb = lgb.LGBMRegressor(objective='regression',num_leaves=5,\n","                              learning_rate=0.05, n_estimators=720,\n","                              max_bin = 55, bagging_fraction = 0.8,\n","                              bagging_freq = 5, feature_fraction = 0.2319,\n","                              feature_fraction_seed=9, bagging_seed=9,\n","                              min_data_in_leaf =6, min_sum_hessian_in_leaf = 11)\n"],"metadata":{"id":"n07UcY9CucjO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model_lgb.fit(df_X_train,df_y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lD5BxAG20SYP","executionInfo":{"status":"ok","timestamp":1662106679470,"user_tz":-540,"elapsed":424,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"04d05ada-13d6-4902-81af-df61dfb10938"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LGBMRegressor(bagging_fraction=0.8, bagging_freq=5, bagging_seed=9,\n","              feature_fraction=0.2319, feature_fraction_seed=9,\n","              learning_rate=0.05, max_bin=55, min_data_in_leaf=6,\n","              min_sum_hessian_in_leaf=11, n_estimators=720, num_leaves=5,\n","              objective='regression')"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["#테스트 \n","X_test = pd.read_csv('/content/흑색종크기_test.csv')\n","X_test.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"MjWHcGB9R6FO","executionInfo":{"status":"ok","timestamp":1662106899298,"user_tz":-540,"elapsed":436,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"5b7a4de8-6953-4a5f-fa09-af6232fa9135"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   mass_npea  size_npear  malign_ratio  damage_size  exposed_area  \\\n","0    4946.44      914.06       0.18479      54.5566  6.628345e+05   \n","1    5613.85     1629.12       0.29019      51.5524  7.842271e+05   \n","2   12421.10     3062.41       0.24654     154.1560  1.763575e+06   \n","3    6830.77     2457.66       0.35979      56.8995  9.296623e+05   \n","4   33407.80    12353.60       0.36978     219.0740  4.595871e+06   \n","\n","   std_dev_malign  err_malign  malign_penalty  damage_ratio  \n","0         67.0525     2301.76              22       41.9554  \n","1         80.1986     3235.00              48       40.7410  \n","2        186.8590     4684.63              63       29.4778  \n","3         92.7361     3211.93              42       38.5027  \n","4        493.3370    13389.36             187       26.8449  "],"text/html":["\n","  <div id=\"df-f79bbef9-a638-4541-ad41-699655a66977\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mass_npea</th>\n","      <th>size_npear</th>\n","      <th>malign_ratio</th>\n","      <th>damage_size</th>\n","      <th>exposed_area</th>\n","      <th>std_dev_malign</th>\n","      <th>err_malign</th>\n","      <th>malign_penalty</th>\n","      <th>damage_ratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4946.44</td>\n","      <td>914.06</td>\n","      <td>0.18479</td>\n","      <td>54.5566</td>\n","      <td>6.628345e+05</td>\n","      <td>67.0525</td>\n","      <td>2301.76</td>\n","      <td>22</td>\n","      <td>41.9554</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5613.85</td>\n","      <td>1629.12</td>\n","      <td>0.29019</td>\n","      <td>51.5524</td>\n","      <td>7.842271e+05</td>\n","      <td>80.1986</td>\n","      <td>3235.00</td>\n","      <td>48</td>\n","      <td>40.7410</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12421.10</td>\n","      <td>3062.41</td>\n","      <td>0.24654</td>\n","      <td>154.1560</td>\n","      <td>1.763575e+06</td>\n","      <td>186.8590</td>\n","      <td>4684.63</td>\n","      <td>63</td>\n","      <td>29.4778</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6830.77</td>\n","      <td>2457.66</td>\n","      <td>0.35979</td>\n","      <td>56.8995</td>\n","      <td>9.296623e+05</td>\n","      <td>92.7361</td>\n","      <td>3211.93</td>\n","      <td>42</td>\n","      <td>38.5027</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>33407.80</td>\n","      <td>12353.60</td>\n","      <td>0.36978</td>\n","      <td>219.0740</td>\n","      <td>4.595871e+06</td>\n","      <td>493.3370</td>\n","      <td>13389.36</td>\n","      <td>187</td>\n","      <td>26.8449</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f79bbef9-a638-4541-ad41-699655a66977')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f79bbef9-a638-4541-ad41-699655a66977 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f79bbef9-a638-4541-ad41-699655a66977');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score"],"metadata":{"id":"FAajGD2RTRGi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["out=pd.read_csv('/content/흑색종_크기.csv')\n","out"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"YDlZT7gLSgkG","executionInfo":{"status":"ok","timestamp":1662107110572,"user_tz":-540,"elapsed":334,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"606150e0-c791-49ca-9a7b-e6d4c7643829"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       tumor_size\n","0        3.418762\n","1        7.348026\n","2        3.096391\n","3       10.489805\n","4       27.416072\n","...           ...\n","36579    6.980089\n","36580    7.591675\n","36581    7.315385\n","36582    4.724118\n","36583    3.169346\n","\n","[36584 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-9eed82bf-9981-465a-b42d-6f0f8aae4814\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tumor_size</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>3.418762</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>7.348026</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.096391</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>10.489805</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27.416072</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>36579</th>\n","      <td>6.980089</td>\n","    </tr>\n","    <tr>\n","      <th>36580</th>\n","      <td>7.591675</td>\n","    </tr>\n","    <tr>\n","      <th>36581</th>\n","      <td>7.315385</td>\n","    </tr>\n","    <tr>\n","      <th>36582</th>\n","      <td>4.724118</td>\n","    </tr>\n","    <tr>\n","      <th>36583</th>\n","      <td>3.169346</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>36584 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9eed82bf-9981-465a-b42d-6f0f8aae4814')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9eed82bf-9981-465a-b42d-6f0f8aae4814 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9eed82bf-9981-465a-b42d-6f0f8aae4814');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["y_pred = model_lgb.predict(X_test)\n","y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IHzg67V-z7dP","executionInfo":{"status":"ok","timestamp":1662107086692,"user_tz":-540,"elapsed":573,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"af4c7a78-a5c3-496b-fed9-286cf68ae87b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5.27612463, 7.59489128, 2.85162922, ..., 6.65150963, 7.80273769,\n","       2.4709654 ])"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["from sklearn.metrics import mean_squared_error\n","mean_squared_error(out, y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qlAciqffS0_6","executionInfo":{"status":"ok","timestamp":1662107433349,"user_tz":-540,"elapsed":481,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"11740cce-b18c-4ee5-d883-abf05d467e8e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4.283685541075982"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# model: 이미 학습이 완료된 LGBMModel, or Booster\n","# FEATURES: model 학습에 사용된 모든 features\n","# PATH: 그림을 저장할 경로\n","\n","# SPLIT\n","ax = lgb.plot_importance(model_lgb, max_num_features=9, importance_type='split')\n","ax.set(title=f'Feature Importance (split)',\n","\txlabel='Feature Importance',\n","\tylabel='Features')\n","#ax.figure.savefig(f'/Users/ojihye/Desktop/cp1/fi_split.png', dpi=300)\n","\n","\n","# GAIN\n","ax = lgb.plot_importance(model_lgb, max_num_features=9, importance_type='gain')\n","ax.set(title=f'Feature Importance (gain)',\n","\txlabel='Feature Importance',\n","\tylabel='Features')\n","#ax.figure.savefig(f'/Users/ojihye/Desktop/cp1/fi_gain).png', dpi=300)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":627},"id":"aZiv-9ZDK8n6","executionInfo":{"status":"ok","timestamp":1662107852885,"user_tz":-540,"elapsed":831,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"7edf8bd9-2e3d-48a0-bb6d-52684c44af22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[Text(0, 0.5, 'Features'),\n"," Text(0.5, 0, 'Feature Importance'),\n"," Text(0.5, 1.0, 'Feature Importance (gain)')]"]},"metadata":{},"execution_count":51},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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gKZATSAaCPJZvySwD2jpzpcAQnKo3wM0dacrArHudB/gMBCA08uww91nA+AHoLK7XoDbjobAdpwxJzcAR4A+7jqxQMWLxWq3cRY+RSVO1aITa1GJU7XgxIrdxplvnwLdAwGEAa+LSDqQijP+YYK7rA9QAVjq/oVyWFU7ikh3YIo7XsIPeBPYeQn73gJ8BFQD5qvqVgAReRFYLSLF3DYNVNUvReRbYA/wM/DFpQRrjDHGXC0KdAKhqquAVecVR7o/twKvnLcMVd3G75c0LlZ/pM/0cTKPgTioqvdksc1ishjToKp9stlHUFblxhhjzNWsQN/GaYwxxpgro0D3QPxRRGQ68Ofziier6tys1lfVKCAqn5tljDHGXLUsgQBUdeCVboMxxhhTkNglDGOMMcbkmSUQxhhjjMkzSyCMMcYYk2eWQBhjjDEmzyyBMMYYY0yeWQJhjDHGmDyzBMIYY4wxeWYJhDHGGGPyzBIIU+icOHGC7t27c/PNN1O/fn02bdrEc889x80330x4eDhdu3blxIkTmbb56aef8Pf3Z8IE511sZ8+epVmzZjRs2JCQkBBefvll77rTpk0jODgYEeH48eNZtmHbtm20bNmSkJAQwsPDWbz499ej9OnTh1q1atG/f38iIiLYtm0bAP/85z8JDw8nLCyMW265he3bt+cYU4apU6dy8803ExISwrBhw7zlY8aMITg4mHr16rFqlfPKmOjoaCIiIryf66+/njfffBOAUaNGUbVqVe+yjFd+x8XF0bZtW/z9/Rk0aFCmODt06OA9Rk888QTnzp3LtHzixImICCdPnszplBljCqIr/TpQ++TuY6/zzr2HH35Y3377bVVVTU5O1vj4eF21apWmpqaqquqwYcN02LBhmba59957tXv37vr666+rqmp6erqeOnVKVVVTUlK0WbNmumnTJlVV/eabbzQmJkZr1qypx44dy7IN0dHRunfvXlVVPXTokN54440aHx+vqqq9e/fWDz/88II4v/jiC/3tt99UVXXlypXarFmzHGNSVV23bp3edtttevbsWVVVPXLkiKqq7ty5U8PDw/Xs2bO6f/9+rV27tqalpWXaX1pamt5www0aGxurqqovv/yyN35fiYmJunHjRp05c6YOHDgw07KTJ096j1e3bt104cKF3mU//fSTtm/fXmvUqKFLly7N8jgVNgXlFdd/hIISK/Y673z72KOsC4gzqecIGrHiSjfjsng2LI0+lxBr7NhOnDx5ks8++4yoqCgASpYsScmSJWnfvr13vRYtWrBkyRLv/NKlS6lVqxZlypTxlokI/v7+AKSmppKamor7WngaNWp00bbUrVvXOx0YGEjlypU5duwY5cqVy3abW265JVMbDx48CJBtTAAzZ85kxIgRXHPNNQBUrlwZgGXLltGrVy+uueYaatWqRXBwMFu2bKFly5befaxdu5abbrqJmjVr5hhLmTJlaNWqFfv27btg2fXXXw9AWloaKSkp3mMEMGTIEMaPH0+XLl1yrN8YUzDZJQxTqMTExFCpUiUeeeQRGjVqRP/+/UlKSsq0zrvvvsudd94JQGJiIuPGjct0iSLDuXPniIiIoHLlyrRr147mzZtfUpu2bNlCSkoKN910k7fshRdeoF+/fgwZMoTk5OQLtnnnnXe8bcwppr1797Jx40aaN29OmzZt+OqrrwA4dOgQ1atX99ZXrVo1Dh06lGkfixYt4v77789UNm3aNMLDw+nbty/x8fG5iu+OO+6gcuXKXHfddXTv3h1wEpiqVavSsGHDXNVhjCl4xOnNqQvRAAAbtUlEQVThKThEJAj4FPgSuAX4CpgLvAJUBh50V50MlALOAI+oarSIhLjrlsRJnu4FDgMfANWA4sDfVfX3C9aZ9x0LzAPuBkoA96nqHhEZBdwEBAMVgfGq+ra7zXNAD+Aa4GNVfdktXwpUd9s4WVVnZ7G/x4DHACpWrNRk5Jtv5/VwFUg3lIYjZ/K+XVjVskRHRzNgwACmTp1KgwYNmDp1KmXKlKFv374AzJ8/n+joaEaPHo2IMHPmTG6++Wbatm1LVFQUpUuXpmfPnpnqTUxM5KWXXuKvf/0rtWrV8pb36tWLt956i7Jly2bbpri4OIYMGcKIESNo0KCBtywgIIATJ04wa9YsAgMD6d27t3ebb7/9ljfffJMpU6ZQtmzOMWUkFU899RR79uxh9OjRLFiwgClTptCgQQPatWsHwPjx471JBji9Kt27d2fu3LkEBAQA8Ntvv1G2bFlEhHfffZe4uDiGDx/ubdenn35KdHQ0gwcPviDOlJQUXn31VTp37kxoaChDhgzh9ddfx9/fn169ejFx4kSqVq2ap/NZECUmJnp7rgq7ghJr27Ztv1bVple6HYVRQU0g9gGNgJ04CcR2oB/QGXgEeBg4rappInI78KSq3isiU4EvVfWfIlISJ2HoCHRQ1Ufd+suqapYjvtwEYqKqThWRAUBjVe3vJhBdgRZAGeBboDkQCnQHHgcEWI6TXHwmIgGq+puIlHZjaKOqcdnFXaN2sBbrMfnSDloB82xYGhO/y/vVtdixnfj1119p0aIFsbGxAGzcuJGxY8eyYsUKoqKieOutt1i7di3XXnstAK1bt+bnn38GnIGKxYoVY/To0RcMFhw9ejTXXnstQ4cO9ZYFBQWxdetWKlasmGV7EhISiIyM5Pnnn/f+Ze7L4/EAMGHCBD755BMAduzYQdeuXfnPf/7jvQySU0wdOnRg+PDhtG3bFoCbbrqJL7/8kjlz5gDwt7/9DXB6CUaNGuW9hLFs2TKmT5/O6tWrsz6WsbHcddddfP/9996yqKgotm7dyrRp07Lc5r333mPLli08/vjj3Hbbbd5jfPDgQSpUqMD27du58cYbs9y2sPB4PERGRl7pZlwWBSVWEbEEIp8U1DEQMar6HYCI7ATWqqqKyHdAEFAWmCcidQDF6S0A2AS8ICLVgH+p6g/uNhNFZBzwiapuvMi+/+X+/Bro5lO+TFXPAGdEZD3QDGgFtMdJKAD8gTrAZ8BfRaSrW17dLc82gShdojjRYztdpGmFg8fjIfbByEva9sYbb6R69epER0dTr1491q5dS4MGDfj0008ZP348GzZs8H6xgfNlnGHUqFHeOw2OHTtGiRIlKFeuHGfOnGHNmjWZ/hq/mJSUFLp27crDDz98QfLwyy+/UKVKFVSVZcuWERoaCjh3gnTr1o33338/0xiK7GICuOeee1i/fj1t27Zl7969pKSkULFiRTp37swDDzzAM888w+HDh/nhhx9o1qyZt86FCxdecPkio10AH3/8sbdd2UlMTOTUqVNUqVKFtLQ0VqxYQevWrQkLC+Po0aPe9YKCgpg8eXKhTx6MKWoKagLhe9E43Wc+HSemvwPrVbWr22PhAVDVBSKyGegErBSRx1V1nYg0xumJeFVE1qrq6Fzs+xyZj9/5XTmK0+swRlXf8l0gIpHA7UBLVT0tIh6cSxnmDzB16lQefPBBUlJSqF27NnPnzuVPf/oTycnJ3i79Fi1aMGvWrGzr+OWXX+jduzfnzp0jPT2dHj16cNdddwEwZcoUxo8fz6+//kp4eDgdO3Zkzpw5bN26lVmzZjFnzhw++OADPvvsM+Li4ryDH6OiooiIiODBBx/k2LFjJCYm8uc//9nbjtGjRxMXF8eAAQMA8PPzY+vWrdnGBNC3b1/69u1LaGgoJUuWZN68eYgIISEh9OjRgwYNGuDn58f06dMpXrw4AElJSaxZs4a33sr0a8mwYcPYtm0bIkJQUFCm5UFBQSQkJJCSksLSpUtZvXo1FSpUoHPnziQnJ5Oenk7btm154okn/tfTZ4wpKK70bSB5/eD0MHzvMx8FdPddBnwM3OuWjQJi3ena/H7ZZgLwNBAIlHLL7gKW5rDvWKCiO90U8PjsYxtOElAB+Mmttz2wGfB316uKM06jC/Bvt+xm4CwQmVPcdhtn4VNU4lQtOrEWlThVC06s2G2c+fYpqD0QFzMe5xLGi4Dv/YA9gIdEJBX4FfgH8CfgdRFJB1KBJy9xnzuA9TiDKP+uqoeBwyJSH9jk3t6WCPwfziDQJ0RkNxCNMyDUGGOMKTAKXAKhqrE4gxMz5vtks6yuz2YvusvHAmPPq3KV+8nNvoN8prcCkT6Ld6jqw1lsMxnnjpDz3ZmbfRpjjDFXI3sOhDHGGGPyrMD1QFwOIvIxUOu84uGqmmVPhaqOyvdGGWOMMVcRSyCyoKpdL76WMcYYU3TZJQxjjDHG5JklEMYYY4zJM0sgjDHGGJNnlkAYY4wxJs8sgTDGGGNMnlkCYYwxxpg8swTCGGOMMXlmCYQxxhhj8swSCFOgBQUFERYWRkREBE2bNgVg27ZttGjRwlu2ZcsWAJYtW0Z4eLi3/PPPP89UV0JCAtWqVWPQoEHesg4dOtCwYUNCQkJ44oknOHfu3AVtOHnyJHfffbd3vYxXbedU78KFC+nbty/h4eF06NCB48ePA/Dhhx8SEhJCsWLFvK/yBoiNjaV06dJEREQQERGR6bXZixcvJjw8nJCQEIYPH+4tHzJkiHf9unXrUq5cOe+y4cOHExoaSmhoKIsXL/aWx8TE0Lx5c4KDg+nZsycpKSkAJCcn07NnT4KDg2nevDmxsbGZYvzpp5/w9/dnwoQJWZ0mY0xhdKVfB2qf3H3sdd5Zq1mzph47dixTWbt27XTlypWqqrpixQpt06aNqqqeOnVK09PTVVV1+/btWq9evUzb/fWvf9X7779fBw4c6C07efKkqqqmp6drt27ddOHChRe04bXXXtNhw4apqurRo0e1fPnympycnG29qampWqlSJV26dKmqqj733HP68ssvq6rqrl27dM+ePdqmTRv96quvvHXExMRoSEjIBfs+fvy4Vq9eXY8ePaqqqg8//LD+97//vWC9KVOm6COPPKKqqp988onefvvtmpqaqomJidq0aVNvnPfdd583xscff1xnzJihqqrTp0/Xxx9/XFVVFy5cqD169MhU/7333qvdu3fX119//YJ9qxacVz//r4pKnKoFJ1bsdd759rFHWf8BRCRRVf1FJBCYoqrd/+h9nEk9R9CIFRdfsRB4NiyNPrmINXZspyzLRYSEhATA6R0IDAwEwN/f37tOUlIS7ivWAfj66685cuQIHTp0yPSX//XXXw9AWloaKSkpmbbx3d+pU6dQVRITEwkICMDPzy/bejP+8Z05cwZVJSEhgeDgYADq169/0bh97d+/nzp16lCpUiUAbr/9dj766CNuu+22TOstXLiQV155BYBdu3bxl7/8BT8/P/z8/AgPD+fTTz/lvvvuY926dSxYsACA3r17M2rUKJ588kmWLVvGqFGjAOjevTuDBg1CVRERli5dSq1atShTpkye2m6MKdgK9SUMESme0/wfTVUP50fyYLInIrRv354mTZowe/ZsAN58802ee+45qlevztChQxkzZox3/Y8//pibb76ZTp068e677wKQnp7Os88+m233+x133EHlypW57rrr6N79wtM7aNAgdu/eTWBgIGFhYUyePJlixYplW2+JEiWYOXMm/fr1IzAwkF27dtGvX7+LxhoTE0OjRo1o06YNGzduBCA4OJjo6GhiY2NJS0tj6dKl/Pzzz5m2O3DgADExMdx6660ANGzYkE8//ZTTp09z/Phx1q9fz88//0xcXBzlypXzJj/VqlXj0KFDABw6dIjq1asD4OfnR9myZYmLiyMxMZFx48bx8ssvX7T9xpjCpUD3QIjI/wF/BUoCm4EBwEngLeB2YKCIfOo7D3yeRT2xwELgTiANeAwYAwQDr6vqLBHxB5YB5YESwIuquuy8eoKAT1Q1VESuBaKAUCAaCAQGqupWEUkEJgN3AWeALqp6JIt2Pea2hYoVKzEyLO1SDlOBc0NppxfiYjweD+PHj6dSpUrEx8czdOhQzpw5w4YNG+jXrx9t2rRh/fr1dOvWjYkTJwJQvnx5Zs2axfbt2xk0aBATJ07k448/pl69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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#딥러닝\n","model = tf.keras.models.Sequential()\n","\n","model.add(tf.keras.layers.Input(shape=(9,)))\n","model.add(tf.keras.layers.BatchNormalization())\n","model.add(tf.keras.layers.Dense(18,activation='relu'))\n","model.add(tf.keras.layers.Dense(36,activation='relu'))\n","model.add(tf.keras.layers.Dense(72,activation='relu'))\n","model.add(tf.keras.layers.Dense(144,activation='relu'))\n","model.add(tf.keras.layers.BatchNormalization())\n","model.add(tf.keras.layers.Dense(128,activation='relu'))\n","model.add(tf.keras.layers.Dense(64,activation='relu'))\n","model.add(tf.keras.layers.Dense(32,activation='relu'))\n","model.add(tf.keras.layers.Dense(16,activation='relu'))\n","model.add(tf.keras.layers.Dense(8,activation='relu'))\n","model.add(tf.keras.layers.Dense(4,activation='relu'))\n","model.add(tf.keras.layers.Dense(2,activation='relu'))\n","model.add(tf.keras.layers.BatchNormalization())\n","model.add(tf.keras.layers.Dense(1,activation='relu'))\n","\n","model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_qdTa1iEwBE3","executionInfo":{"status":"ok","timestamp":1662099229119,"user_tz":-540,"elapsed":3626,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"3980ccbb-422b-4339-aa8c-9bd0119d6d8b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," batch_normalization (BatchN  (None, 9)                36        \n"," ormalization)                                                   \n","                                                                 \n"," dense (Dense)               (None, 18)                180       \n","                                                                 \n"," dense_1 (Dense)             (None, 36)                684       \n","                                                                 \n"," dense_2 (Dense)             (None, 72)                2664      \n","                                                                 \n"," dense_3 (Dense)             (None, 144)               10512     \n","                                                                 \n"," batch_normalization_1 (Batc  (None, 144)              576       \n"," hNormalization)                                                 \n","                                                                 \n"," dense_4 (Dense)             (None, 128)               18560     \n","                                                                 \n"," dense_5 (Dense)             (None, 64)                8256      \n","                                                                 \n"," dense_6 (Dense)             (None, 32)                2080      \n","                                                                 \n"," dense_7 (Dense)             (None, 16)                528       \n","                                                                 \n"," dense_8 (Dense)             (None, 8)                 136       \n","                                                                 \n"," dense_9 (Dense)             (None, 4)                 36        \n","                                                                 \n"," dense_10 (Dense)            (None, 2)                 10        \n","                                                                 \n"," batch_normalization_2 (Batc  (None, 2)                8         \n"," hNormalization)                                                 \n","                                                                 \n"," dense_11 (Dense)            (None, 1)                 3         \n","                                                                 \n","=================================================================\n","Total params: 44,269\n","Trainable params: 43,959\n","Non-trainable params: 310\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["optimizer = tf.keras.optimizers.Adam(0.001)\n","model.compile(optimizer=optimizer,loss='mse',metrics=['mae'])"],"metadata":{"id":"sjbUPzTL1XhU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model.fit(df_X_train,df_y_train,epochs=100,batch_size=32,validation_data=(df_X_valid,df_y_valid))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6GtHYhy11cUV","executionInfo":{"status":"ok","timestamp":1662099377098,"user_tz":-540,"elapsed":102940,"user":{"displayName":"jihye OH","userId":"13553027699751294051"}},"outputId":"82ae216c-9af8-4a71-e95a-8c18ec2dc4f0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","215/215 [==============================] - 5s 5ms/step - loss: 76.8025 - mae: 6.7548 - val_loss: 87.3467 - val_mae: 7.2041\n","Epoch 2/100\n","215/215 [==============================] - 1s 4ms/step - loss: 62.8336 - mae: 6.0081 - val_loss: 61.9181 - val_mae: 5.9358\n","Epoch 3/100\n","215/215 [==============================] - 1s 5ms/step - loss: 49.8228 - mae: 5.3749 - val_loss: 42.5780 - val_mae: 5.0662\n","Epoch 4/100\n","215/215 [==============================] - 1s 4ms/step - loss: 39.1109 - mae: 4.8789 - val_loss: 38.2764 - val_mae: 4.8706\n","Epoch 5/100\n","215/215 [==============================] - 1s 5ms/step - loss: 32.6136 - mae: 4.5338 - val_loss: 30.2595 - val_mae: 4.3518\n","Epoch 6/100\n","215/215 [==============================] - 1s 5ms/step - loss: 28.8677 - mae: 4.2649 - val_loss: 27.2807 - val_mae: 4.1072\n","Epoch 7/100\n","215/215 [==============================] - 1s 5ms/step - loss: 26.6514 - mae: 4.1079 - val_loss: 25.8315 - val_mae: 3.9830\n","Epoch 8/100\n","215/215 [==============================] - 1s 5ms/step - loss: 26.3582 - mae: 4.0643 - val_loss: 26.4579 - val_mae: 3.9967\n","Epoch 9/100\n","215/215 [==============================] - 1s 5ms/step - loss: 25.8469 - mae: 3.9650 - val_loss: 26.6157 - val_mae: 3.9636\n","Epoch 10/100\n","215/215 [==============================] - 1s 4ms/step - loss: 24.6489 - mae: 3.8794 - val_loss: 35.1026 - val_mae: 4.7122\n","Epoch 11/100\n","215/215 [==============================] - 1s 5ms/step - loss: 23.8710 - mae: 3.8171 - val_loss: 23.0872 - val_mae: 3.6707\n","Epoch 12/100\n","215/215 [==============================] - 1s 4ms/step - loss: 23.4593 - mae: 3.8247 - val_loss: 22.6760 - val_mae: 3.7456\n","Epoch 13/100\n","215/215 [==============================] - 1s 4ms/step - loss: 23.4304 - mae: 3.8416 - val_loss: 22.1768 - val_mae: 3.6498\n","Epoch 14/100\n","215/215 [==============================] - 1s 5ms/step - loss: 23.3210 - mae: 3.8170 - val_loss: 22.5260 - val_mae: 3.7147\n","Epoch 15/100\n","215/215 [==============================] - 1s 5ms/step - loss: 23.0908 - mae: 3.7941 - val_loss: 22.4291 - val_mae: 3.6890\n","Epoch 16/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.5922 - mae: 3.7649 - val_loss: 22.4692 - val_mae: 3.7052\n","Epoch 17/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.4470 - mae: 3.7425 - val_loss: 23.4351 - val_mae: 3.7684\n","Epoch 18/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.9237 - mae: 3.7626 - val_loss: 21.8464 - val_mae: 3.6232\n","Epoch 19/100\n","215/215 [==============================] - 1s 4ms/step - loss: 22.6908 - mae: 3.7502 - val_loss: 22.7636 - val_mae: 3.7681\n","Epoch 20/100\n","215/215 [==============================] - 1s 4ms/step - loss: 22.4553 - mae: 3.7311 - val_loss: 21.8914 - val_mae: 3.6264\n","Epoch 21/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.3184 - mae: 3.7043 - val_loss: 22.9487 - val_mae: 3.6305\n","Epoch 22/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.2261 - mae: 3.7036 - val_loss: 21.8401 - val_mae: 3.5682\n","Epoch 23/100\n","215/215 [==============================] - 1s 5ms/step - loss: 22.1296 - mae: 3.6832 - val_loss: 20.7908 - val_mae: 3.4632\n","Epoch 24/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.7500 - mae: 3.6556 - val_loss: 22.3794 - val_mae: 3.6330\n","Epoch 25/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.8898 - mae: 3.6546 - val_loss: 21.1252 - val_mae: 3.6097\n","Epoch 26/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.6467 - mae: 3.6370 - val_loss: 20.7767 - val_mae: 3.4358\n","Epoch 27/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.8896 - mae: 3.6597 - val_loss: 21.1037 - val_mae: 3.5218\n","Epoch 28/100\n","215/215 [==============================] - 1s 4ms/step - loss: 21.2773 - mae: 3.5894 - val_loss: 21.1909 - val_mae: 3.6045\n","Epoch 29/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.4603 - mae: 3.6115 - val_loss: 20.1720 - val_mae: 3.4924\n","Epoch 30/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.3084 - mae: 3.5985 - val_loss: 20.8272 - val_mae: 3.4598\n","Epoch 31/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.9518 - mae: 3.5561 - val_loss: 22.4469 - val_mae: 3.5731\n","Epoch 32/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.8737 - mae: 3.5572 - val_loss: 21.5872 - val_mae: 3.4816\n","Epoch 33/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.0437 - mae: 3.5514 - val_loss: 20.5605 - val_mae: 3.4350\n","Epoch 34/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.8317 - mae: 3.5407 - val_loss: 20.7038 - val_mae: 3.3995\n","Epoch 35/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.9677 - mae: 3.5316 - val_loss: 20.7860 - val_mae: 3.4465\n","Epoch 36/100\n","215/215 [==============================] - 1s 5ms/step - loss: 21.0830 - mae: 3.5680 - val_loss: 20.2941 - val_mae: 3.4590\n","Epoch 37/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.8196 - mae: 3.5292 - val_loss: 20.4799 - val_mae: 3.4226\n","Epoch 38/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.5640 - mae: 3.5189 - val_loss: 19.8230 - val_mae: 3.4205\n","Epoch 39/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.7758 - mae: 3.5469 - val_loss: 19.4324 - val_mae: 3.2879\n","Epoch 40/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.4441 - mae: 3.5021 - val_loss: 21.0561 - val_mae: 3.4509\n","Epoch 41/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.6990 - mae: 3.5170 - val_loss: 19.9257 - val_mae: 3.3302\n","Epoch 42/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.8431 - mae: 3.4364 - val_loss: 19.6984 - val_mae: 3.2864\n","Epoch 43/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.4233 - mae: 3.4735 - val_loss: 20.3065 - val_mae: 3.4284\n","Epoch 44/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.1038 - mae: 3.4668 - val_loss: 21.1802 - val_mae: 3.3748\n","Epoch 45/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.1998 - mae: 3.4674 - val_loss: 19.8171 - val_mae: 3.3687\n","Epoch 46/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.2638 - mae: 3.4554 - val_loss: 19.8532 - val_mae: 3.4107\n","Epoch 47/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.3515 - mae: 3.4746 - val_loss: 20.0040 - val_mae: 3.4025\n","Epoch 48/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.2420 - mae: 3.4764 - val_loss: 21.0366 - val_mae: 3.3853\n","Epoch 49/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.3372 - mae: 3.4553 - val_loss: 20.2615 - val_mae: 3.4985\n","Epoch 50/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.7115 - mae: 3.4113 - val_loss: 20.2012 - val_mae: 3.4213\n","Epoch 51/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.5294 - mae: 3.4805 - val_loss: 19.2743 - val_mae: 3.3704\n","Epoch 52/100\n","215/215 [==============================] - 1s 4ms/step - loss: 19.5999 - mae: 3.4156 - val_loss: 20.1728 - val_mae: 3.3317\n","Epoch 53/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.6769 - mae: 3.3860 - val_loss: 18.8564 - val_mae: 3.3226\n","Epoch 54/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.0201 - mae: 3.4516 - val_loss: 19.3225 - val_mae: 3.3311\n","Epoch 55/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.7357 - mae: 3.4004 - val_loss: 19.5643 - val_mae: 3.3529\n","Epoch 56/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.9792 - mae: 3.4234 - val_loss: 18.8609 - val_mae: 3.2492\n","Epoch 57/100\n","215/215 [==============================] - 1s 5ms/step - loss: 20.0027 - mae: 3.4399 - val_loss: 19.0914 - val_mae: 3.3501\n","Epoch 58/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.5781 - mae: 3.3974 - val_loss: 20.7489 - val_mae: 3.3248\n","Epoch 59/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.4063 - mae: 3.3782 - val_loss: 19.9798 - val_mae: 3.3492\n","Epoch 60/100\n","215/215 [==============================] - 1s 4ms/step - loss: 20.0456 - mae: 3.4199 - val_loss: 19.4493 - val_mae: 3.2849\n","Epoch 61/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.8177 - mae: 3.4160 - val_loss: 20.5255 - val_mae: 3.3921\n","Epoch 62/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.4897 - mae: 3.3712 - val_loss: 19.5303 - val_mae: 3.3445\n","Epoch 63/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.2907 - mae: 3.3491 - val_loss: 19.0976 - val_mae: 3.2607\n","Epoch 64/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.5610 - mae: 3.3837 - val_loss: 19.7220 - val_mae: 3.2874\n","Epoch 65/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.6010 - mae: 3.3804 - val_loss: 19.1811 - val_mae: 3.2607\n","Epoch 66/100\n","215/215 [==============================] - 1s 4ms/step - loss: 19.5625 - mae: 3.3926 - val_loss: 19.0042 - val_mae: 3.2593\n","Epoch 67/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.6144 - mae: 3.4037 - val_loss: 18.9456 - val_mae: 3.2559\n","Epoch 68/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.1253 - mae: 3.3458 - val_loss: 18.7919 - val_mae: 3.2407\n","Epoch 69/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.0045 - mae: 3.3233 - val_loss: 19.7829 - val_mae: 3.3841\n","Epoch 70/100\n","215/215 [==============================] - 1s 4ms/step - loss: 19.3229 - mae: 3.3573 - val_loss: 18.7419 - val_mae: 3.2519\n","Epoch 71/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.0652 - mae: 3.3250 - val_loss: 19.0548 - val_mae: 3.2565\n","Epoch 72/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.4906 - mae: 3.3763 - val_loss: 19.5892 - val_mae: 3.3272\n","Epoch 73/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.2453 - mae: 3.3448 - val_loss: 19.2358 - val_mae: 3.3426\n","Epoch 74/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.8733 - mae: 3.3359 - val_loss: 19.2136 - val_mae: 3.2799\n","Epoch 75/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.1616 - mae: 3.3315 - val_loss: 19.7199 - val_mae: 3.3025\n","Epoch 76/100\n","215/215 [==============================] - 1s 4ms/step - loss: 19.0900 - mae: 3.3291 - val_loss: 19.4623 - val_mae: 3.3570\n","Epoch 77/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.1934 - mae: 3.3367 - val_loss: 19.2777 - val_mae: 3.3143\n","Epoch 78/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.8883 - mae: 3.3241 - val_loss: 19.4249 - val_mae: 3.2624\n","Epoch 79/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.4853 - mae: 3.3589 - val_loss: 19.0766 - val_mae: 3.2972\n","Epoch 80/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.7934 - mae: 3.3077 - val_loss: 19.6643 - val_mae: 3.3125\n","Epoch 81/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.1050 - mae: 3.3386 - val_loss: 19.4674 - val_mae: 3.3021\n","Epoch 82/100\n","215/215 [==============================] - 1s 5ms/step - loss: 19.0172 - mae: 3.3189 - val_loss: 19.5910 - val_mae: 3.3292\n","Epoch 83/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.8134 - mae: 3.3051 - val_loss: 19.3207 - val_mae: 3.2554\n","Epoch 84/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.9515 - mae: 3.2946 - val_loss: 18.9548 - val_mae: 3.1773\n","Epoch 85/100\n","215/215 [==============================] - 1s 4ms/step - loss: 18.9992 - mae: 3.3151 - val_loss: 20.8134 - val_mae: 3.4698\n","Epoch 86/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.0356 - mae: 3.2274 - val_loss: 19.0610 - val_mae: 3.2338\n","Epoch 87/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.3405 - mae: 3.2511 - val_loss: 18.6396 - val_mae: 3.1345\n","Epoch 88/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.9036 - mae: 3.2956 - val_loss: 19.0295 - val_mae: 3.2007\n","Epoch 89/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.6192 - mae: 3.2816 - val_loss: 19.8422 - val_mae: 3.2911\n","Epoch 90/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.2422 - mae: 3.2373 - val_loss: 19.2924 - val_mae: 3.2760\n","Epoch 91/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.7907 - mae: 3.2894 - val_loss: 18.6105 - val_mae: 3.2073\n","Epoch 92/100\n","215/215 [==============================] - 1s 4ms/step - loss: 18.7092 - mae: 3.2979 - val_loss: 19.3621 - val_mae: 3.1882\n","Epoch 93/100\n","215/215 [==============================] - 1s 4ms/step - loss: 18.0670 - mae: 3.2394 - val_loss: 19.4705 - val_mae: 3.2333\n","Epoch 94/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.6397 - mae: 3.2521 - val_loss: 18.7756 - val_mae: 3.2263\n","Epoch 95/100\n","215/215 [==============================] - 1s 4ms/step - loss: 18.9614 - mae: 3.2972 - val_loss: 18.9992 - val_mae: 3.2041\n","Epoch 96/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.7753 - mae: 3.2983 - val_loss: 18.7557 - val_mae: 3.2518\n","Epoch 97/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.5892 - mae: 3.2704 - val_loss: 18.7853 - val_mae: 3.1313\n","Epoch 98/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.4305 - mae: 3.2695 - val_loss: 19.0777 - val_mae: 3.2416\n","Epoch 99/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.6929 - mae: 3.2682 - val_loss: 18.6852 - val_mae: 3.2449\n","Epoch 100/100\n","215/215 [==============================] - 1s 5ms/step - loss: 18.7405 - mae: 3.3030 - val_loss: 19.1228 - val_mae: 3.2282\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f71ee72ba50>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":[],"metadata":{"id":"z-maQzCu1fAm"},"execution_count":null,"outputs":[]}]}